;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This is autogenerated by CLPM. Do not edit by hand.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(:api-version "0.3")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN SOURCES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:sources
(:implicit-file :type :file-system :system-files
 ("cricket.asd" "cricket.test.asd"))
(:implicit-vcs :type :vcs :projects
 (("arrow-macros" :github :path "hipeta/arrow-macros")
  ("cl-cpus" :github :path "muyinliu/cl-cpus")
  ("lparallel" :github :path "lmj/lparallel")
  ("mfiano-utils" :github :path "mfiano/mfiano-utils")
  ("pngload" :github :path "mfiano/pngload")
  ("prove" :github :path "fukamachi/prove")
  ("seedable-rng" :github :path "mfiano/seedable-rng")))
("quicklisp" :url "https://beta.quicklisp.org/dist/quicklisp.txt" :type
 :quicklisp)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN REQUIREMENTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:requirements
(:system :name "zpng")
(:project :name "seedable-rng" :branch "master" :source :implicit-vcs)
(:project :name "prove" :branch "master" :source :implicit-vcs)
(:project :name "pngload" :branch "master" :source :implicit-vcs)
(:project :name "mfiano-utils" :branch "master" :source :implicit-vcs)
(:project :name "lparallel" :branch "master" :source :implicit-vcs)
(:project :name "cl-cpus" :branch "master" :source :implicit-vcs)
(:project :name "arrow-macros" :branch "master" :source :implicit-vcs)
(:asd-file :name "cricket.test.asd")
(:asd-file :name "cricket.asd")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN RELEASES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:releases
("3bz" :version "2020-12-20" :source "quicklisp" :systems ("3bz"))
("alexandria" :version "2021-08-07" :source "quicklisp" :systems ("alexandria"))
("anaphora" :version "2021-01-24" :source "quicklisp" :systems ("anaphora"))
("arrow-macros" :version (:commit "1ed4fe61794ec30259c12c004b287a7b03870573")
 :source :implicit-vcs :systems ("arrow-macros" "arrow-macros-test"))
("asdf-flv" :version "2016-04-21" :source "quicklisp" :systems
 ("net.didierverna.asdf-flv"))
("babel" :version "2020-09-25" :source "quicklisp" :systems ("babel"))
("bordeaux-threads" :version "2020-06-10" :source "quicklisp" :systems
 ("bordeaux-threads"))
("cffi" :version "2021-04-11" :source "quicklisp" :systems
 ("cffi" "cffi-grovel" "cffi-toolchain"))
("chipz" :version "2021-08-07" :source "quicklisp" :systems ("chipz"))
("cl-ansi-text" :version "2021-01-24" :source "quicklisp" :systems
 ("cl-ansi-text"))
("cl-colors" :version "2018-03-28" :source "quicklisp" :systems ("cl-colors"))
("cl-colors2" :version "2021-06-30" :source "quicklisp" :systems ("cl-colors2"))
("cl-cpus" :version (:commit "c1e3ae5722c480e69be9eab2369d6ae0f7d4fb9e")
 :source :implicit-vcs :systems ("cl-cpus"))
("cl-jpeg" :version "2017-06-30" :source "quicklisp" :systems ("cl-jpeg"))
("cl-pcg" :version "2020-10-16" :source "quicklisp" :systems ("cl-pcg"))
("cl-ppcre" :version "2019-05-21" :source "quicklisp" :systems ("cl-ppcre"))
("cl-tga" :version "2016-03-18" :source "quicklisp" :systems ("cl-tga"))
("cricket.asd" :version :newest :source :implicit-file :systems ("cricket"))
("cricket.test.asd" :version :newest :source :implicit-file :systems
 ("cricket.test"))
("deflate" :version "2020-02-18" :source "quicklisp" :systems ("deflate"))
("documentation-utils" :version "2019-07-11" :source "quicklisp" :systems
 ("documentation-utils"))
("fiveam" :version "2020-09-25" :source "quicklisp" :systems ("fiveam"))
("flexi-streams" :version "2021-08-07" :source "quicklisp" :systems
 ("flexi-streams"))
("ieee-floats" :version "2017-08-30" :source "quicklisp" :systems
 ("ieee-floats"))
("ironclad" :version "2021-04-11" :source "quicklisp" :systems ("ironclad"))
("iterate" :version "2021-05-31" :source "quicklisp" :systems ("iterate"))
("let-plus" :version "2019-11-30" :source "quicklisp" :systems ("let-plus"))
("local-time" :version "2021-01-24" :source "quicklisp" :systems ("local-time"))
("lparallel" :version (:commit "9c11f40018155a472c540b63684049acc9b36e15")
 :source :implicit-vcs :systems
 ("lparallel" "lparallel-bench" "lparallel-test"))
("mfiano-utils" :version (:commit "cc3746c5f47b2ba8f5afa7b3e914b2e1d0ffaac7")
 :source :implicit-vcs :systems ("mfiano-utils"))
("mmap" :version "2020-12-20" :source "quicklisp" :systems ("mmap"))
("monkeylib-binary-data" :version "2011-12-03" :source "quicklisp" :systems
 ("com.gigamonkeys.binary-data"))
("nibbles" :version "2021-05-31" :source "quicklisp" :systems ("nibbles"))
("opticl" :version "2021-01-24" :source "quicklisp" :systems ("opticl"))
("opticl-core" :version "2017-10-19" :source "quicklisp" :systems
 ("opticl-core"))
("parse-float" :version "2020-02-18" :source "quicklisp" :systems
 ("parse-float"))
("png-read" :version "2017-08-30" :source "quicklisp" :systems ("png-read"))
("pngload" :version (:commit "ab9edbec2eea4d62ba83bbe8d60ec06da6257d91")
 :source :implicit-vcs :systems ("pngload" "pngload.test"))
("prove" :version (:commit "5d71f02795b89e36f34e8c7d50e69b67ec6ca2de") :source
 :implicit-vcs :systems ("cl-test-more" "prove" "prove-asdf" "prove-test"))
("retrospectiff" :version "2017-10-19" :source "quicklisp" :systems
 ("retrospectiff"))
("salza2" :version "2013-07-20" :source "quicklisp" :systems ("salza2"))
("seedable-rng" :version (:commit "ce6889fc785a572c26e3c6297cfa4dfbe7150f32")
 :source :implicit-vcs :systems ("seedable-rng"))
("skippy" :version "2015-04-07" :source "quicklisp" :systems ("skippy"))
("split-sequence" :version "2021-05-31" :source "quicklisp" :systems
 ("split-sequence"))
("static-vectors" :version "2021-06-30" :source "quicklisp" :systems
 ("static-vectors"))
("swap-bytes" :version "2019-11-30" :source "quicklisp" :systems ("swap-bytes"))
("trivial-backtrace" :version "2020-06-10" :source "quicklisp" :systems
 ("trivial-backtrace"))
("trivial-features" :version "2021-04-11" :source "quicklisp" :systems
 ("trivial-features"))
("trivial-garbage" :version "2020-09-25" :source "quicklisp" :systems
 ("trivial-garbage"))
("trivial-gray-streams" :version "2021-01-24" :source "quicklisp" :systems
 ("trivial-gray-streams"))
("trivial-indent" :version "2021-05-31" :source "quicklisp" :systems
 ("trivial-indent"))
("zpb-exif" :version "2021-01-24" :source "quicklisp" :systems ("zpb-exif"))
("zpng" :version "2015-04-07" :source "quicklisp" :systems ("zpng"))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN REVERSE-DEPENDENCIES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:reverse-dependencies
("3bz" ((:system :name "pngload") (:system :name "3bz")))

("alexandria" ((:system :name "static-vectors") (:system :name "alexandria"))
 ((:system :name "prove-test") (:system :name "alexandria"))
 ((:system :name "prove") (:system :name "alexandria"))
 ((:system :name "pngload.test") (:system :name "alexandria"))
 ((:system :name "pngload") (:system :name "alexandria"))
 ((:system :name "parse-float") (:system :name "alexandria"))
 ((:system :name "opticl-core") (:system :name "alexandria"))
 ((:system :name "opticl") (:system :name "alexandria"))
 ((:system :name "mfiano-utils") (:system :name "alexandria"))
 ((:system :name "lparallel") (:system :name "alexandria"))
 ((:system :name "let-plus") (:system :name "alexandria"))
 ((:system :name "fiveam") (:system :name "alexandria"))
 ((:system :name "com.gigamonkeys.binary-data") (:system :name "alexandria"))
 ((:system :name "cl-colors2") (:system :name "alexandria"))
 ((:system :name "cl-colors") (:system :name "alexandria"))
 ((:system :name "cl-ansi-text") (:system :name "alexandria"))
 ((:system :name "cffi-grovel") (:system :name "alexandria"))
 ((:system :name "cffi") (:system :name "alexandria"))
 ((:system :name "bordeaux-threads") (:system :name "alexandria"))
 ((:system :name "babel") (:system :name "alexandria"))
 ((:system :name "arrow-macros") (:system :name "alexandria"))
 ((:system :name "3bz") (:system :name "alexandria")))

("anaphora" ((:system :name "let-plus") (:system :name "anaphora")))

("arrow-macros" ((:system :name "cricket") (:system :name "arrow-macros"))
 ((:system :name "arrow-macros-test") (:system :name "arrow-macros"))
 (t (:project :name "arrow-macros" :branch "master" :source :implicit-vcs)))

("asdf-flv"
 ((:system :name "fiveam") (:system :name "net.didierverna.asdf-flv")))

("babel" ((:system :name "png-read") (:system :name "babel"))
 ((:system :name "cffi") (:system :name "babel"))
 ((:system :name "3bz") (:system :name "babel")))

("bordeaux-threads"
 ((:system :name "lparallel") (:system :name "bordeaux-threads"))
 ((:system :name "ironclad") (:system :name "bordeaux-threads")))

("cffi" ((:system :name "static-vectors") (:system :name "cffi"))
 ((:system :name "static-vectors") (:system :name "cffi-grovel"))
 ((:system :name "pngload") (:system :name "cffi"))
 ((:system :name "mmap") (:system :name "cffi"))
 ((:system :name "cl-cpus") (:system :name "cffi"))
 ((:system :name "cffi-toolchain") (:system :name "cffi"))
 ((:system :name "cffi-grovel") (:system :name "cffi"))
 ((:system :name "cffi-grovel") (:system :name "cffi-toolchain"))
 ((:system :name "3bz") (:system :name "cffi")))

("chipz" ((:system :name "png-read") (:system :name "chipz")))

("cl-ansi-text" ((:system :name "prove") (:system :name "cl-ansi-text")))

("cl-colors" ((:system :name "prove") (:system :name "cl-colors")))

("cl-colors2" ((:system :name "cl-ansi-text") (:system :name "cl-colors2")))

("cl-cpus" ((:system :name "cricket") (:system :name "cl-cpus"))
 (t (:project :name "cl-cpus" :branch "master" :source :implicit-vcs)))

("cl-jpeg" ((:system :name "retrospectiff") (:system :name "cl-jpeg"))
 ((:system :name "opticl") (:system :name "cl-jpeg")))

("cl-pcg" ((:system :name "seedable-rng") (:system :name "cl-pcg")))

("cl-ppcre" ((:system :name "prove") (:system :name "cl-ppcre"))
 ((:system :name "cl-colors2") (:system :name "cl-ppcre")))

("cl-tga" ((:system :name "opticl") (:system :name "cl-tga")))

("cricket.asd" ((:system :name "cricket.test") (:system :name "cricket"))
 (t (:asd-file :name "cricket.asd")))

("cricket.test.asd" (t (:asd-file :name "cricket.test.asd")))

("deflate" ((:system :name "retrospectiff") (:system :name "deflate")))

("documentation-utils"
 ((:system :name "mmap") (:system :name "documentation-utils")))

("fiveam" ((:system :name "arrow-macros-test") (:system :name "fiveam")))

("flexi-streams"
 ((:system :name "retrospectiff") (:system :name "flexi-streams")))

("ieee-floats" ((:system :name "retrospectiff") (:system :name "ieee-floats")))

("ironclad" ((:system :name "seedable-rng") (:system :name "ironclad")))

("iterate" ((:system :name "png-read") (:system :name "iterate")))

("let-plus" ((:system :name "cl-colors") (:system :name "let-plus")))

("local-time" ((:system :name "pngload.test") (:system :name "local-time")))

("lparallel" ((:system :name "lparallel-test") (:system :name "lparallel"))
 ((:system :name "lparallel-bench") (:system :name "lparallel"))
 ((:system :name "cricket") (:system :name "lparallel"))
 (t (:project :name "lparallel" :branch "master" :source :implicit-vcs)))

("mfiano-utils" ((:system :name "seedable-rng") (:system :name "mfiano-utils"))
 ((:system :name "cricket.test") (:system :name "mfiano-utils"))
 ((:system :name "cricket") (:system :name "mfiano-utils"))
 (t (:project :name "mfiano-utils" :branch "master" :source :implicit-vcs)))

("mmap" ((:system :name "pngload") (:system :name "mmap"))
 ((:system :name "3bz") (:system :name "mmap")))

("monkeylib-binary-data"
 ((:system :name "retrospectiff")
  (:system :name "com.gigamonkeys.binary-data")))

("nibbles" ((:system :name "3bz") (:system :name "nibbles")))

("opticl" ((:system :name "pngload.test") (:system :name "opticl")))

("opticl-core" ((:system :name "retrospectiff") (:system :name "opticl-core"))
 ((:system :name "opticl") (:system :name "opticl-core")))

("parse-float" ((:system :name "pngload") (:system :name "parse-float")))

("png-read" ((:system :name "pngload.test") (:system :name "png-read")))

("pngload" ((:system :name "pngload.test") (:system :name "pngload"))
 ((:system :name "opticl") (:system :name "pngload"))
 ((:system :name "cricket.test") (:system :name "pngload"))
 (t (:project :name "pngload" :branch "master" :source :implicit-vcs)))

("prove" ((:system :name "prove-test") (:system :name "prove-asdf"))
 ((:system :name "prove-test") (:system :name "prove-asdf"))
 ((:system :name "prove-test") (:system :name "prove"))
 ((:system :name "cricket.test") (:system :name "prove-asdf"))
 ((:system :name "cricket.test") (:system :name "prove-asdf"))
 ((:system :name "cricket.test") (:system :name "prove"))
 ((:system :name "cl-test-more") (:system :name "prove"))
 (t (:project :name "prove" :branch "master" :source :implicit-vcs)))

("retrospectiff" ((:system :name "opticl") (:system :name "retrospectiff")))

("salza2" ((:system :name "zpng") (:system :name "salza2")))

("seedable-rng" ((:system :name "cricket") (:system :name "seedable-rng"))
 (t (:project :name "seedable-rng" :branch "master" :source :implicit-vcs)))

("skippy" ((:system :name "opticl") (:system :name "skippy")))

("split-sequence"
 ((:system :name "prove-test") (:system :name "split-sequence")))

("static-vectors" ((:system :name "pngload") (:system :name "static-vectors")))

("swap-bytes" ((:system :name "pngload") (:system :name "swap-bytes")))

("trivial-backtrace"
 ((:system :name "fiveam") (:system :name "trivial-backtrace")))

("trivial-features"
 ((:system :name "swap-bytes") (:system :name "trivial-features"))
 ((:system :name "mmap") (:system :name "trivial-features"))
 ((:system :name "cffi") (:system :name "trivial-features"))
 ((:system :name "babel") (:system :name "trivial-features"))
 ((:system :name "3bz") (:system :name "trivial-features")))

("trivial-garbage"
 ((:system :name "lparallel-bench") (:system :name "trivial-garbage")))

("trivial-gray-streams"
 ((:system :name "flexi-streams") (:system :name "trivial-gray-streams")))

("trivial-indent"
 ((:system :name "documentation-utils") (:system :name "trivial-indent")))

("zpb-exif" ((:system :name "pngload") (:system :name "zpb-exif")))

("zpng" ((:system :name "opticl") (:system :name "zpng"))
 ((:system :name "cricket") (:system :name "zpng")) (t (:system :name "zpng")))

